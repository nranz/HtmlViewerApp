name: Build and Test with Coverage

on:
  push:
    branches:
      - "main"

env:
  SOLUTION_FILE: ./HtmlViewerApp.sln

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Run tests with code coverage
        run: dotnet test ${{ env.SOLUTION_FILE }} --no-restore --collect:"XPlat Code Coverage"

      - name: Generate code coverage report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"**/TestResults/*/coverage.cobertura.xml" -targetdir:"coverage" -reporttypes:Html
        # The output goes into the 'coverage' folder

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v3

      - name: Upload coverage artifact for GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./coverage

  deploy-coverage:
    name: Deploy Coverage Report
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
